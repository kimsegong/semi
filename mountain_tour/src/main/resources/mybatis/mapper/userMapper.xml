<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mountaintour.mountain.dao.UserMapper">
	
	  <select id="getUser" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, STATE, AUTH, PW_MODIFIED_AT, JOINED_AT
      FROM USER_T
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
      <if test="userNo != null">AND USER_NO = #{userNo}</if>
    </where>
  </select>

	<insert id="insertAccess" parameterType="String">
	INSERT INTO ACCESS_T (
		EMAIL
	  , LOGIN_AT
	  ) VALUES (
	  	#{email}
	  , SYSDATE
	  )
	</insert>
 	
 

	<insert id="insertUser" parameterType="UserDto">
	 INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , PW
      , NAME
      , GENDER
      , MOBILE
      , POSTCODE
      , ROAD_ADDRESS
      , JIBUN_ADDRESS
      , DETAIL_ADDRESS
      , AGREE
      , STATE
      , AUTH
      , PW_MODIFIED_AT
      , JOINED_AT
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{pw}
      , #{name}
      , #{gender}
      , #{mobile}
      , #{postcode}
      , #{roadAddress}
      , #{jibunAddress}
      , #{detailAddress}
      , #{agree}
      , 0
      , 1
      , SYSDATE
      , SYSDATE
    )
  </insert>
  
   <update id="updateUser" parameterType="UserDto">
    UPDATE USER_T
       SET NAME = #{name}
         , GENDER = #{gender}
         , MOBILE = #{mobile}
         , POSTCODE = #{postcode}
         , ROAD_ADDRESS = #{roadAddress}
         , JIBUN_ADDRESS = #{jibunAddress}
         , DETAIL_ADDRESS = #{detailAddress}
         , AGREE = #{agree}
     WHERE USER_NO = #{userNo}
  </update>

  <update id="updateUserPw" parameterType="UserDto">
    UPDATE USER_T
       SET PW = #{pw}
         , PW_MODIFIED_AT = SYSDATE
     WHERE USER_NO = #{userNo}
  </update>
  
   <delete id="deleteUser" parameterType="UserDto">
    DELETE
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </delete>
  
    <insert id="insertNaverUser" parameterType="UserDto">
    INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , NAME
      , GENDER
      , MOBILE
      , AGREE
      , STATE
      , AUTH
      , PW_MODIFIED_AT
      , JOINED_AT
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{name}
      , #{gender}
      , #{mobile}
      , #{agree}
      , 1
      , 1
      , SYSDATE
      , SYSDATE
    )
  </insert>
  
  <!-- 회원 관리 목록 -->
  <select id="getUserCount" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
  </select>

  <select id="getUserList" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, STATE, AUTH, PW_MODIFIED_AT, JOINED_AT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO DESC) AS RN, USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, STATE, AUTH, PW_MODIFIED_AT, JOINED_AT
              FROM USER_T)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>

  <!-- 회원 검색결과 목록 -->
  <select id="getSearchUserCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
     WHERE ${column} LIKE '%' || #{query} || '%'
  </select>
  <select id="getSearchUser" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, STATE, AUTH, PW_MODIFIED_AT, JOINED_AT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO DESC) AS RN, USER_NO, EMAIL, PW, NAME, GENDER, MOBILE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, AGREE, STATE, AUTH, PW_MODIFIED_AT, JOINED_AT
              FROM USER_T
             WHERE ${column} LIKE '%' || #{query} || '%')
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
</mapper>